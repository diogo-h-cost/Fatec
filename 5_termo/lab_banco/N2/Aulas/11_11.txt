USE empresa;
SHOW TABLES;

# -------------------------- PROCEDURES

DELIMITER $$
CREATE PROCEDURE pro_orders() # Cria a Procedure
BEGIN # Inicio do bloco de execucao

SELECT * FROM orders; # Pode ter N coisas

END # Fim do bloco
$$ DELIMITER ;

CALL pro_orders(); # Chamar a Procedure >> Precisa de ()
DROP PROCEDURE pro_orders; # Excluir a Procedure >> Nao precisa ()

DELIMITER $$
CREATE PROCEDURE pro_employees()
BEGIN

UPDATE employees SET BirthDate = '1989-01-01' WHERE EmployeeID = 1;
UPDATE employees SET LastName = 'Pereira' WHERE EmployeeID = 3;
SELECT * FROM employees WHERE EmployeeID in (1, 3);

END
$$ DELIMITER ;

CALL pro_employees();
DROP PROCEDURE pro_employees;

DELIMITER $$
CREATE PROCEDURE pro_employees(IN id_parametro INT) # IN nome Tipo [se for VARCHAR coloca (tamanho)
BEGIN

UPDATE employees SET FirstName = 'Wander', LastName = 'Ranha' WHERE EmployeeID = id_parametro;
SELECT * FROM employees WHERE EmployeeID = id_parametro;

END
$$ DELIMITER ;

CALL pro_employees(3);
DROP PROCEDURE pro_employees;

DELIMITER $$
CREATE PROCEDURE pro_employees(IN id_parametro INT, IN nome_parametro VARCHAR(256))
BEGIN

SELECT * FROM employees WHERE FirstName = nome_parametro AND EmployeeID = id_parametro;

END
$$ DELIMITER ;

CALL pro_employees(3, 'Wander');
DROP PROCEDURE pro_employees;

# -------------------------- TRIGGERS

CREATE TABLE log_employees(id INT, descricao VARCHAR(255), data_evento DATE);

DELIMITER $$
CREATE TRIGGER cria_historico_employees # Criar uma Trigger
AFTER INSERT ON employees # Depois de Insert na tabela EMPLOYEES
FOR EACH ROW # p/ cada linha
BEGIN

INSERT INTO log_employees(id, descricao, data_evento) VALUES(1, 'Inserção de Funcionario', NOW());

END
$$ DELIMITER ;

INSERT INTO employees(LastName, FirstName, BirthDate, Photo, Notes)
VALUES('Frigas', 'Caio', '1990-08-08', 'EmpID11.pic', 'teste'); # Testando a TRIGGER

SHOW TRIGGERS; # Visualizar as TRIGGERS

DESCRIBE employees; # Descricao de tabela